

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Mar 09 15:07:15 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61                           	psect	idataCOMRAM
    62  000D1E                     __pidataCOMRAM:
    63                           	callstack 0
    64                           
    65                           ;initializer for _keypad
    66  000D1E  37                 	db	55
    67  000D1F  38                 	db	56
    68  000D20  39                 	db	57
    69  000D21  2F                 	db	47
    70  000D22  34                 	db	52
    71  000D23  35                 	db	53
    72  000D24  36                 	db	54
    73  000D25  2A                 	db	42
    74  000D26  31                 	db	49
    75  000D27  32                 	db	50
    76  000D28  33                 	db	51
    77  000D29  2D                 	db	45
    78  000D2A  20                 	db	32
    79  000D2B  30                 	db	48
    80  000D2C  3D                 	db	61
    81  000D2D  2B                 	db	43
    82  0000                     _LATD1	set	31841
    83  0000                     _LATD0	set	31840
    84  0000                     _PORTB	set	3969
    85  0000                     _LATB	set	3978
    86  0000                     _LATD	set	3980
    87  0000                     _TRISD	set	3989
    88  0000                     _OSCCON	set	4051
    89  0000                     _TRISB	set	3987
    90  0000                     _RBPU	set	32655
    91                           
    92                           	psect	smallconst
    93  000800                     __psmallconst:
    94                           	callstack 0
    95  000800  00                 	db	0
    96  000801                     STR_1:
    97  000801  41                 	db	65	;'A'
    98  000802  4E                 	db	78	;'N'
    99  000803  53                 	db	83	;'S'
   100  000804  3A                 	db	58	;':'
   101  000805  20                 	db	32
   102  000806  00                 	db	0
   103  000807  00                 	db	0	; dummy byte at the end
   104  0000                     
   105                           ; #config settings
   106                           
   107                           	psect	cinit
   108  000CBA                     __pcinit:
   109                           	callstack 0
   110  000CBA                     start_initialization:
   111                           	callstack 0
   112  000CBA                     __initialization:
   113                           	callstack 0
   114                           
   115                           ; Initialize objects allocated to COMRAM (16 bytes)
   116                           ; load TBLPTR registers with __pidataCOMRAM
   117  000CBA  0E1E               	movlw	low __pidataCOMRAM
   118  000CBC  6EF6               	movwf	tblptrl,c
   119  000CBE  0E0D               	movlw	high __pidataCOMRAM
   120  000CC0  6EF7               	movwf	tblptrh,c
   121  000CC2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   122  000CC4  6EF8               	movwf	tblptru,c
   123  000CC6  EE00  F031         	lfsr	0,__pdataCOMRAM
   124  000CCA  EE10 F010          	lfsr	1,16
   125  000CCE                     copy_data0:
   126  000CCE  0009               	tblrd		*+
   127  000CD0  CFF5 FFEE          	movff	tablat,postinc0
   128  000CD4  50E5               	movf	postdec1,w,c
   129  000CD6  50E1               	movf	fsr1l,w,c
   130  000CD8  E1FA               	bnz	copy_data0
   131                           
   132                           ; Clear objects allocated to COMRAM (3 bytes)
   133  000CDA  6A43               	clrf	(__pbssCOMRAM+2)& (0+255),c
   134  000CDC  6A42               	clrf	(__pbssCOMRAM+1)& (0+255),c
   135  000CDE  6A41               	clrf	__pbssCOMRAM& (0+255),c
   136  000CE0                     end_of_initialization:
   137                           	callstack 0
   138  000CE0                     __end_of__initialization:
   139                           	callstack 0
   140  000CE0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   141  000CE2  6EF8               	movwf	tblptru,c
   142  000CE4  0E08               	movlw	high __Lsmallconst
   143  000CE6  6EF7               	movwf	tblptrh,c
   144  000CE8  0100               	movlb	0
   145  000CEA  EF15  F005         	goto	_main	;jump to C main() function
   146                           
   147                           	psect	bssCOMRAM
   148  000041                     __pbssCOMRAM:
   149                           	callstack 0
   150  000041                     _temp_col:
   151                           	callstack 0
   152  000041                     	ds	1
   153  000042                     _rowloc:
   154                           	callstack 0
   155  000042                     	ds	1
   156  000043                     _col_loc:
   157                           	callstack 0
   158  000043                     	ds	1
   159                           
   160                           	psect	dataCOMRAM
   161  000031                     __pdataCOMRAM:
   162                           	callstack 0
   163  000031                     _keypad:
   164                           	callstack 0
   165  000031                     	ds	16
   166                           
   167                           	psect	cstackCOMRAM
   168  000001                     __pcstackCOMRAM:
   169                           	callstack 0
   170  000001                     MSdelay@val:
   171                           	callstack 0
   172                           
   173                           ; 2 bytes @ 0x0
   174  000001                     	ds	2
   175  000003                     MSdelay@i:
   176                           	callstack 0
   177                           
   178                           ; 2 bytes @ 0x2
   179  000003                     	ds	2
   180  000005                     MSdelay@j:
   181                           	callstack 0
   182                           
   183                           ; 2 bytes @ 0x4
   184  000005                     	ds	2
   185  000007                     ??_LCD_Command:
   186  000007                     ??_LCD_Char:
   187                           
   188                           ; 1 bytes @ 0x6
   189  000007                     	ds	1
   190  000008                     LCD_Command@cmd:
   191                           	callstack 0
   192  000008                     LCD_Char@dat:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x7
   196  000008                     	ds	1
   197  000009                     LCD_String@msg:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x8
   201  000009                     	ds	2
   202  00000B                     LCD_String_xy@pos:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0xA
   206  00000B                     	ds	1
   207  00000C                     LCD_String_xy@msg:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0xB
   211  00000C                     	ds	2
   212  00000E                     LCD_String_xy@row:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xD
   216  00000E                     	ds	1
   217  00000F                     LCD_String_xy@location:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0xE
   221  00000F                     	ds	1
   222  000010                     main@mess:
   223                           	callstack 0
   224                           
   225                           ; 30 bytes @ 0xF
   226  000010                     	ds	30
   227  00002E                     main@key:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x2D
   231  00002E                     	ds	1
   232  00002F                     main@i:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x2E
   236  00002F                     	ds	2
   237                           
   238 ;;
   239 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   240 ;;
   241 ;; *************** function _main *****************
   242 ;; Defined at:
   243 ;;		line 23 in file "4x4_Keypad.c"
   244 ;; Parameters:    Size  Location     Type
   245 ;;		None
   246 ;; Auto vars:     Size  Location     Type
   247 ;;  mess           30   15[COMRAM] unsigned char [30]
   248 ;;  i               2   46[COMRAM] int 
   249 ;;  key             1   45[COMRAM] unsigned char 
   250 ;; Return value:  Size  Location     Type
   251 ;;                  1    wreg      void 
   252 ;; Registers used:
   253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   254 ;; Tracked objects:
   255 ;;		On entry : 0/0
   256 ;;		On exit  : 0/0
   257 ;;		Unchanged: 0/0
   258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   259 ;;      Params:         0       0       0       0       0       0       0       0       0
   260 ;;      Locals:        33       0       0       0       0       0       0       0       0
   261 ;;      Temps:          0       0       0       0       0       0       0       0       0
   262 ;;      Totals:        33       0       0       0       0       0       0       0       0
   263 ;;Total ram usage:       33 bytes
   264 ;; Hardware stack levels required when called: 4
   265 ;; This function calls:
   266 ;;		_LCD_Char
   267 ;;		_LCD_Clear
   268 ;;		_LCD_Command
   269 ;;		_LCD_Init
   270 ;;		_LCD_String_xy
   271 ;;		_keyfind
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278  000A2A                     __ptext0:
   279                           	callstack 0
   280  000A2A                     _main:
   281                           	callstack 27
   282  000A2A  0E00               	movlw	0
   283  000A2C  6E30               	movwf	(main@i+1)^0,c
   284  000A2E  0E00               	movlw	0
   285  000A30  6E2F               	movwf	main@i^0,c
   286  000A32  0E72               	movlw	114
   287  000A34  6ED3               	movwf	211,c	;volatile
   288  000A36  0E00               	movlw	0
   289  000A38  6E30               	movwf	(main@i+1)^0,c
   290  000A3A  0E00               	movlw	0
   291  000A3C  6E2F               	movwf	main@i^0,c
   292  000A3E                     l1264:
   293  000A3E  0E10               	movlw	low main@mess
   294  000A40  242F               	addwf	main@i^0,w,c
   295  000A42  6ED9               	movwf	fsr2l,c
   296  000A44  0E00               	movlw	high main@mess
   297  000A46  2030               	addwfc	(main@i+1)^0,w,c
   298  000A48  6EDA               	movwf	fsr2h,c
   299  000A4A  0E20               	movlw	32
   300  000A4C  6EDF               	movwf	indf2,c
   301  000A4E  4A2F               	infsnz	main@i^0,f,c
   302  000A50  2A30               	incf	(main@i+1)^0,f,c
   303  000A52  BE30               	btfsc	(main@i+1)^0,7,c
   304  000A54  EF35  F005         	goto	u441
   305  000A58  5030               	movf	(main@i+1)^0,w,c
   306  000A5A  E109               	bnz	u440
   307  000A5C  0E1E               	movlw	30
   308  000A5E  5C2F               	subwf	main@i^0,w,c
   309  000A60  A0D8               	btfss	status,0,c
   310  000A62  EF35  F005         	goto	u441
   311  000A66  EF37  F005         	goto	u440
   312  000A6A                     u441:
   313  000A6A  EF1F  F005         	goto	l1264
   314  000A6E                     u440:
   315  000A6E  9EF1               	bcf	4081,7,c	;volatile
   316  000A70  EC77  F006         	call	_LCD_Init	;wreg free
   317  000A74                     l1272:
   318  000A74  EC04  F004         	call	_keyfind	;wreg free
   319  000A78  6E2E               	movwf	main@key^0,c
   320  000A7A  0E20               	movlw	32
   321  000A7C  182E               	xorwf	main@key^0,w,c
   322  000A7E  A4D8               	btfss	status,2,c
   323  000A80  EF44  F005         	goto	u451
   324  000A84  EF46  F005         	goto	u450
   325  000A88                     u451:
   326  000A88  EF6A  F005         	goto	l1292
   327  000A8C                     u450:
   328  000A8C  EC97  F006         	call	_LCD_Clear	;wreg free
   329  000A90  0E00               	movlw	0
   330  000A92  6E30               	movwf	(main@i+1)^0,c
   331  000A94  0E00               	movlw	0
   332  000A96  6E2F               	movwf	main@i^0,c
   333  000A98                     l1284:
   334  000A98  0E10               	movlw	low main@mess
   335  000A9A  242F               	addwf	main@i^0,w,c
   336  000A9C  6ED9               	movwf	fsr2l,c
   337  000A9E  0E00               	movlw	high main@mess
   338  000AA0  2030               	addwfc	(main@i+1)^0,w,c
   339  000AA2  6EDA               	movwf	fsr2h,c
   340  000AA4  0E20               	movlw	32
   341  000AA6  6EDF               	movwf	indf2,c
   342  000AA8  4A2F               	infsnz	main@i^0,f,c
   343  000AAA  2A30               	incf	(main@i+1)^0,f,c
   344  000AAC  BE30               	btfsc	(main@i+1)^0,7,c
   345  000AAE  EF62  F005         	goto	u461
   346  000AB2  5030               	movf	(main@i+1)^0,w,c
   347  000AB4  E109               	bnz	u460
   348  000AB6  0E1E               	movlw	30
   349  000AB8  5C2F               	subwf	main@i^0,w,c
   350  000ABA  A0D8               	btfss	status,0,c
   351  000ABC  EF62  F005         	goto	u461
   352  000AC0  EF64  F005         	goto	u460
   353  000AC4                     u461:
   354  000AC4  EF4C  F005         	goto	l1284
   355  000AC8                     u460:
   356  000AC8  0E00               	movlw	0
   357  000ACA  6E30               	movwf	(main@i+1)^0,c
   358  000ACC  0E00               	movlw	0
   359  000ACE  6E2F               	movwf	main@i^0,c
   360  000AD0  EF3A  F005         	goto	l1272
   361  000AD4                     l1292:
   362  000AD4  0E3D               	movlw	61
   363  000AD6  182E               	xorwf	main@key^0,w,c
   364  000AD8  A4D8               	btfss	status,2,c
   365  000ADA  EF71  F005         	goto	u471
   366  000ADE  EF73  F005         	goto	u470
   367  000AE2                     u471:
   368  000AE2  EFA0  F005         	goto	l1312
   369  000AE6                     u470:
   370  000AE6  EC97  F006         	call	_LCD_Clear	;wreg free
   371  000AEA  0E00               	movlw	0
   372  000AEC  6E0B               	movwf	LCD_String_xy@pos^0,c
   373  000AEE  0E01               	movlw	low STR_1
   374  000AF0  6E0C               	movwf	LCD_String_xy@msg^0,c
   375  000AF2  0E08               	movlw	high STR_1
   376  000AF4  6E0D               	movwf	(LCD_String_xy@msg+1)^0,c
   377  000AF6  0E00               	movlw	0
   378  000AF8  EC22  F006         	call	_LCD_String_xy
   379  000AFC  0EC0               	movlw	192
   380  000AFE  ECD7  F005         	call	_LCD_Command
   381  000B02  0E00               	movlw	0
   382  000B04  6E30               	movwf	(main@i+1)^0,c
   383  000B06  0E00               	movlw	0
   384  000B08  6E2F               	movwf	main@i^0,c
   385  000B0A                     l1306:
   386  000B0A  0E10               	movlw	low main@mess
   387  000B0C  242F               	addwf	main@i^0,w,c
   388  000B0E  6ED9               	movwf	fsr2l,c
   389  000B10  0E00               	movlw	high main@mess
   390  000B12  2030               	addwfc	(main@i+1)^0,w,c
   391  000B14  6EDA               	movwf	fsr2h,c
   392  000B16  50DF               	movf	indf2,w,c
   393  000B18  ECB1  F005         	call	_LCD_Char
   394  000B1C  4A2F               	infsnz	main@i^0,f,c
   395  000B1E  2A30               	incf	(main@i+1)^0,f,c
   396  000B20  BE30               	btfsc	(main@i+1)^0,7,c
   397  000B22  EF9C  F005         	goto	u481
   398  000B26  5030               	movf	(main@i+1)^0,w,c
   399  000B28  E109               	bnz	u480
   400  000B2A  0E1E               	movlw	30
   401  000B2C  5C2F               	subwf	main@i^0,w,c
   402  000B2E  A0D8               	btfss	status,0,c
   403  000B30  EF9C  F005         	goto	u481
   404  000B34  EF9E  F005         	goto	u480
   405  000B38                     u481:
   406  000B38  EF85  F005         	goto	l1306
   407  000B3C                     u480:
   408  000B3C  EF3A  F005         	goto	l1272
   409  000B40                     l1312:
   410  000B40  0E10               	movlw	low main@mess
   411  000B42  242F               	addwf	main@i^0,w,c
   412  000B44  6ED9               	movwf	fsr2l,c
   413  000B46  0E00               	movlw	high main@mess
   414  000B48  2030               	addwfc	(main@i+1)^0,w,c
   415  000B4A  6EDA               	movwf	fsr2h,c
   416  000B4C  C02E  FFDF         	movff	main@key,indf2
   417  000B50  4A2F               	infsnz	main@i^0,f,c
   418  000B52  2A30               	incf	(main@i+1)^0,f,c
   419  000B54  502E               	movf	main@key^0,w,c
   420  000B56  ECB1  F005         	call	_LCD_Char
   421  000B5A  EF3A  F005         	goto	l1272
   422  000B5E  EF00  F000         	goto	start
   423  000B62                     __end_of_main:
   424                           	callstack 0
   425                           
   426 ;; *************** function _keyfind *****************
   427 ;; Defined at:
   428 ;;		line 59 in file "4x4_Keypad.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;  temp1           1    0        unsigned char 
   433 ;; Return value:  Size  Location     Type
   434 ;;                  1    wreg      unsigned char 
   435 ;; Registers used:
   436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   442 ;;      Params:         0       0       0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels used: 1
   448 ;; Hardware stack levels required when called: 1
   449 ;; This function calls:
   450 ;;		_MSdelay
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text1
   457  000808                     __ptext1:
   458                           	callstack 0
   459  000808                     _keyfind:
   460                           	callstack 29
   461  000808  0EF0               	movlw	240
   462  00080A  6E93               	movwf	147,c	;volatile
   463  00080C  0EF0               	movlw	240
   464  00080E  6E8A               	movwf	138,c	;volatile
   465  000810                     l1160:
   466  000810  5081               	movf	129,w,c	;volatile
   467  000812  0BF0               	andlw	240
   468  000814  6E43               	movwf	_col_loc^0,c
   469  000816  0EF0               	movlw	240
   470  000818  1843               	xorwf	_col_loc^0,w,c
   471  00081A  A4D8               	btfss	status,2,c
   472  00081C  EF12  F004         	goto	u291
   473  000820  EF14  F004         	goto	u290
   474  000824                     u291:
   475  000824  EF08  F004         	goto	l1160
   476  000828                     u290:
   477  000828  5081               	movf	129,w,c	;volatile
   478  00082A  0BF0               	andlw	240
   479  00082C  6E43               	movwf	_col_loc^0,c
   480  00082E  0EF0               	movlw	240
   481  000830  1843               	xorwf	_col_loc^0,w,c
   482  000832  A4D8               	btfss	status,2,c
   483  000834  EF1E  F004         	goto	u301
   484  000838  EF20  F004         	goto	u300
   485  00083C                     u301:
   486  00083C  EF08  F004         	goto	l1160
   487  000840                     u300:
   488  000840  0E00               	movlw	0
   489  000842  6E02               	movwf	(MSdelay@val+1)^0,c
   490  000844  0E32               	movlw	50
   491  000846  6E01               	movwf	MSdelay@val^0,c
   492  000848  ECFD  F005         	call	_MSdelay	;wreg free
   493  00084C  0EF0               	movlw	240
   494  00084E  6E8A               	movwf	138,c	;volatile
   495  000850                     l1170:
   496  000850  5081               	movf	129,w,c	;volatile
   497  000852  0BF0               	andlw	240
   498  000854  6E43               	movwf	_col_loc^0,c
   499  000856  0EF0               	movlw	240
   500  000858  1843               	xorwf	_col_loc^0,w,c
   501  00085A  B4D8               	btfsc	status,2,c
   502  00085C  EF32  F004         	goto	u311
   503  000860  EF34  F004         	goto	u310
   504  000864                     u311:
   505  000864  EF28  F004         	goto	l1170
   506  000868                     u310:
   507  000868  5081               	movf	129,w,c	;volatile
   508  00086A  0BF0               	andlw	240
   509  00086C  6E43               	movwf	_col_loc^0,c
   510  00086E  0EF0               	movlw	240
   511  000870  1843               	xorwf	_col_loc^0,w,c
   512  000872  B4D8               	btfsc	status,2,c
   513  000874  EF3E  F004         	goto	u321
   514  000878  EF40  F004         	goto	u320
   515  00087C                     u321:
   516  00087C  EF28  F004         	goto	l1170
   517  000880                     u320:
   518  000880  0E00               	movlw	0
   519  000882  6E02               	movwf	(MSdelay@val+1)^0,c
   520  000884  0E14               	movlw	20
   521  000886  6E01               	movwf	MSdelay@val^0,c
   522  000888  ECFD  F005         	call	_MSdelay	;wreg free
   523  00088C  5081               	movf	129,w,c	;volatile
   524  00088E  0BF0               	andlw	240
   525  000890  6E43               	movwf	_col_loc^0,c
   526  000892                     l1180:
   527  000892  0EFE               	movlw	254
   528  000894  6E8A               	movwf	138,c	;volatile
   529  000896  5081               	movf	129,w,c	;volatile
   530  000898  0BF0               	andlw	240
   531  00089A  6E43               	movwf	_col_loc^0,c
   532  00089C  C043  F041         	movff	_col_loc,_temp_col
   533  0008A0  0EF0               	movlw	240
   534  0008A2  1843               	xorwf	_col_loc^0,w,c
   535  0008A4  B4D8               	btfsc	status,2,c
   536  0008A6  EF57  F004         	goto	u331
   537  0008AA  EF59  F004         	goto	u330
   538  0008AE                     u331:
   539  0008AE  EF6B  F004         	goto	l1192
   540  0008B2                     u330:
   541  0008B2  0E00               	movlw	0
   542  0008B4  6E42               	movwf	_rowloc^0,c
   543  0008B6  EF60  F004         	goto	l108
   544  0008BA                     l1190:
   545  0008BA  5081               	movf	129,w,c	;volatile
   546  0008BC  0BF0               	andlw	240
   547  0008BE  6E41               	movwf	_temp_col^0,c
   548  0008C0                     l108:
   549  0008C0  0EF0               	movlw	240
   550  0008C2  1841               	xorwf	_temp_col^0,w,c
   551  0008C4  A4D8               	btfss	status,2,c
   552  0008C6  EF67  F004         	goto	u341
   553  0008CA  EF69  F004         	goto	u340
   554  0008CE                     u341:
   555  0008CE  EF5D  F004         	goto	l1190
   556  0008D2                     u340:
   557  0008D2  EFCF  F004         	goto	l1228
   558  0008D6                     l1192:
   559  0008D6  0EFD               	movlw	253
   560  0008D8  6E8A               	movwf	138,c	;volatile
   561  0008DA  5081               	movf	129,w,c	;volatile
   562  0008DC  0BF0               	andlw	240
   563  0008DE  6E43               	movwf	_col_loc^0,c
   564  0008E0  C043  F041         	movff	_col_loc,_temp_col
   565  0008E4  0EF0               	movlw	240
   566  0008E6  1843               	xorwf	_col_loc^0,w,c
   567  0008E8  B4D8               	btfsc	status,2,c
   568  0008EA  EF79  F004         	goto	u351
   569  0008EE  EF7B  F004         	goto	u350
   570  0008F2                     u351:
   571  0008F2  EF8D  F004         	goto	l1204
   572  0008F6                     u350:
   573  0008F6  0E01               	movlw	1
   574  0008F8  6E42               	movwf	_rowloc^0,c
   575  0008FA  EF82  F004         	goto	l113
   576  0008FE                     l1202:
   577  0008FE  5081               	movf	129,w,c	;volatile
   578  000900  0BF0               	andlw	240
   579  000902  6E41               	movwf	_temp_col^0,c
   580  000904                     l113:
   581  000904  0EF0               	movlw	240
   582  000906  1841               	xorwf	_temp_col^0,w,c
   583  000908  A4D8               	btfss	status,2,c
   584  00090A  EF89  F004         	goto	u361
   585  00090E  EF8B  F004         	goto	u360
   586  000912                     u361:
   587  000912  EF7F  F004         	goto	l1202
   588  000916                     u360:
   589  000916  EFCF  F004         	goto	l1228
   590  00091A                     l1204:
   591  00091A  0EFB               	movlw	251
   592  00091C  6E8A               	movwf	138,c	;volatile
   593  00091E  5081               	movf	129,w,c	;volatile
   594  000920  0BF0               	andlw	240
   595  000922  6E43               	movwf	_col_loc^0,c
   596  000924  C043  F041         	movff	_col_loc,_temp_col
   597  000928  0EF0               	movlw	240
   598  00092A  1843               	xorwf	_col_loc^0,w,c
   599  00092C  B4D8               	btfsc	status,2,c
   600  00092E  EF9B  F004         	goto	u371
   601  000932  EF9D  F004         	goto	u370
   602  000936                     u371:
   603  000936  EFAF  F004         	goto	l1216
   604  00093A                     u370:
   605  00093A  0E02               	movlw	2
   606  00093C  6E42               	movwf	_rowloc^0,c
   607  00093E  EFA4  F004         	goto	l117
   608  000942                     l1214:
   609  000942  5081               	movf	129,w,c	;volatile
   610  000944  0BF0               	andlw	240
   611  000946  6E41               	movwf	_temp_col^0,c
   612  000948                     l117:
   613  000948  0EF0               	movlw	240
   614  00094A  1841               	xorwf	_temp_col^0,w,c
   615  00094C  A4D8               	btfss	status,2,c
   616  00094E  EFAB  F004         	goto	u381
   617  000952  EFAD  F004         	goto	u380
   618  000956                     u381:
   619  000956  EFA1  F004         	goto	l1214
   620  00095A                     u380:
   621  00095A  EFCF  F004         	goto	l1228
   622  00095E                     l1216:
   623  00095E  0EF7               	movlw	247
   624  000960  6E8A               	movwf	138,c	;volatile
   625  000962  5081               	movf	129,w,c	;volatile
   626  000964  0BF0               	andlw	240
   627  000966  6E43               	movwf	_col_loc^0,c
   628  000968  C043  F041         	movff	_col_loc,_temp_col
   629  00096C  0EF0               	movlw	240
   630  00096E  1843               	xorwf	_col_loc^0,w,c
   631  000970  B4D8               	btfsc	status,2,c
   632  000972  EFBD  F004         	goto	u391
   633  000976  EFBF  F004         	goto	u390
   634  00097A                     u391:
   635  00097A  EF49  F004         	goto	l1180
   636  00097E                     u390:
   637  00097E  0E03               	movlw	3
   638  000980  6E42               	movwf	_rowloc^0,c
   639  000982  EFC6  F004         	goto	l121
   640  000986                     l1226:
   641  000986  5081               	movf	129,w,c	;volatile
   642  000988  0BF0               	andlw	240
   643  00098A  6E41               	movwf	_temp_col^0,c
   644  00098C                     l121:
   645  00098C  0EF0               	movlw	240
   646  00098E  1841               	xorwf	_temp_col^0,w,c
   647  000990  A4D8               	btfss	status,2,c
   648  000992  EFCD  F004         	goto	u401
   649  000996  EFCF  F004         	goto	u400
   650  00099A                     u401:
   651  00099A  EFC3  F004         	goto	l1226
   652  00099E                     u400:
   653  00099E                     l1228:
   654  00099E  0EE0               	movlw	224
   655  0009A0  1843               	xorwf	_col_loc^0,w,c
   656  0009A2  A4D8               	btfss	status,2,c
   657  0009A4  EFD6  F004         	goto	u411
   658  0009A8  EFD8  F004         	goto	u410
   659  0009AC                     u411:
   660  0009AC  EFE3  F004         	goto	l1236
   661  0009B0                     u410:
   662  0009B0  5042               	movf	_rowloc^0,w,c
   663  0009B2  0D04               	mullw	4
   664  0009B4  0E31               	movlw	low _keypad
   665  0009B6  24F3               	addwf	243,w,c
   666  0009B8  6ED9               	movwf	fsr2l,c
   667  0009BA  0E00               	movlw	high _keypad
   668  0009BC  20F4               	addwfc	prodh,w,c
   669  0009BE  6EDA               	movwf	fsr2h,c
   670  0009C0  50DF               	movf	indf2,w,c
   671  0009C2  EF14  F005         	goto	l127
   672  0009C6                     l1236:
   673  0009C6  0ED0               	movlw	208
   674  0009C8  1843               	xorwf	_col_loc^0,w,c
   675  0009CA  A4D8               	btfss	status,2,c
   676  0009CC  EFEA  F004         	goto	u421
   677  0009D0  EFEC  F004         	goto	u420
   678  0009D4                     u421:
   679  0009D4  EFF7  F004         	goto	l1244
   680  0009D8                     u420:
   681  0009D8  5042               	movf	_rowloc^0,w,c
   682  0009DA  0D04               	mullw	4
   683  0009DC  0E32               	movlw	low (_keypad+1)
   684  0009DE  24F3               	addwf	243,w,c
   685  0009E0  6ED9               	movwf	fsr2l,c
   686  0009E2  0E00               	movlw	high (_keypad+1)
   687  0009E4  20F4               	addwfc	prodh,w,c
   688  0009E6  6EDA               	movwf	fsr2h,c
   689  0009E8  50DF               	movf	indf2,w,c
   690  0009EA  EF14  F005         	goto	l127
   691  0009EE                     l1244:
   692  0009EE  0EB0               	movlw	176
   693  0009F0  1843               	xorwf	_col_loc^0,w,c
   694  0009F2  A4D8               	btfss	status,2,c
   695  0009F4  EFFE  F004         	goto	u431
   696  0009F8  EF00  F005         	goto	u430
   697  0009FC                     u431:
   698  0009FC  EF0B  F005         	goto	l1252
   699  000A00                     u430:
   700  000A00  5042               	movf	_rowloc^0,w,c
   701  000A02  0D04               	mullw	4
   702  000A04  0E33               	movlw	low (_keypad+2)
   703  000A06  24F3               	addwf	243,w,c
   704  000A08  6ED9               	movwf	fsr2l,c
   705  000A0A  0E00               	movlw	high (_keypad+2)
   706  000A0C  20F4               	addwfc	prodh,w,c
   707  000A0E  6EDA               	movwf	fsr2h,c
   708  000A10  50DF               	movf	indf2,w,c
   709  000A12  EF14  F005         	goto	l127
   710  000A16                     l1252:
   711  000A16  5042               	movf	_rowloc^0,w,c
   712  000A18  0D04               	mullw	4
   713  000A1A  0E34               	movlw	low (_keypad+3)
   714  000A1C  24F3               	addwf	243,w,c
   715  000A1E  6ED9               	movwf	fsr2l,c
   716  000A20  0E00               	movlw	high (_keypad+3)
   717  000A22  20F4               	addwfc	prodh,w,c
   718  000A24  6EDA               	movwf	fsr2h,c
   719  000A26  50DF               	movf	indf2,w,c
   720  000A28                     l127:
   721  000A28  0012               	return		;funcret
   722  000A2A                     __end_of_keyfind:
   723                           	callstack 0
   724                           
   725 ;; *************** function _LCD_String_xy *****************
   726 ;; Defined at:
   727 ;;		line 56 in file "LCD_16x2_4bit_mode.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  row             1    wreg     unsigned char 
   730 ;;  pos             1   10[COMRAM] unsigned char 
   731 ;;  msg             2   11[COMRAM] PTR const unsigned char 
   732 ;;		 -> STR_1(6), 
   733 ;; Auto vars:     Size  Location     Type
   734 ;;  row             1   13[COMRAM] unsigned char 
   735 ;;  location        1   14[COMRAM] unsigned char 
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : 0/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   745 ;;      Params:         3       0       0       0       0       0       0       0       0
   746 ;;      Locals:         2       0       0       0       0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0       0       0       0       0
   748 ;;      Totals:         5       0       0       0       0       0       0       0       0
   749 ;;Total ram usage:        5 bytes
   750 ;; Hardware stack levels used: 1
   751 ;; Hardware stack levels required when called: 3
   752 ;; This function calls:
   753 ;;		_LCD_Command
   754 ;;		_LCD_String
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text2
   761  000C44                     __ptext2:
   762                           	callstack 0
   763  000C44                     _LCD_String_xy:
   764                           	callstack 27
   765                           
   766                           ;incstack = 0
   767                           ;LCD_String_xy@row stored from wreg
   768  000C44  6E0E               	movwf	LCD_String_xy@row^0,c
   769  000C46                     
   770                           ;LCD_16x2_4bit_mode.c: 59:     if(row<=1)
   771  000C46  0E02               	movlw	2
   772  000C48  600E               	cpfslt	LCD_String_xy@row^0,c
   773  000C4A  EF29  F006         	goto	u281
   774  000C4E  EF2B  F006         	goto	u280
   775  000C52                     u281:
   776  000C52  EF34  F006         	goto	l1150
   777  000C56                     u280:
   778  000C56                     
   779                           ;LCD_16x2_4bit_mode.c: 60:     {;LCD_16x2_4bit_mode.c: 61:         location = (0x80) | (
      +                          (pos) & 0x0f);
   780  000C56  500B               	movf	LCD_String_xy@pos^0,w,c
   781  000C58  0B0F               	andlw	15
   782  000C5A  0980               	iorlw	128
   783  000C5C  6E0F               	movwf	LCD_String_xy@location^0,c
   784  000C5E                     
   785                           ;LCD_16x2_4bit_mode.c: 62:         LCD_Command(location);
   786  000C5E  500F               	movf	LCD_String_xy@location^0,w,c
   787  000C60  ECD7  F005         	call	_LCD_Command
   788                           
   789                           ;LCD_16x2_4bit_mode.c: 63:     }
   790  000C64  EF3B  F006         	goto	l1154
   791  000C68                     l1150:
   792                           
   793                           ;LCD_16x2_4bit_mode.c: 65:     {;LCD_16x2_4bit_mode.c: 66:         location = (0xC0) | (
      +                          (pos) & 0x0f);
   794  000C68  500B               	movf	LCD_String_xy@pos^0,w,c
   795  000C6A  0B0F               	andlw	15
   796  000C6C  09C0               	iorlw	192
   797  000C6E  6E0F               	movwf	LCD_String_xy@location^0,c
   798  000C70                     
   799                           ;LCD_16x2_4bit_mode.c: 67:         LCD_Command(location);
   800  000C70  500F               	movf	LCD_String_xy@location^0,w,c
   801  000C72  ECD7  F005         	call	_LCD_Command
   802  000C76                     l1154:
   803                           
   804                           ;LCD_16x2_4bit_mode.c: 71:     LCD_String(msg);
   805  000C76  C00C  F009         	movff	LCD_String_xy@msg,LCD_String@msg
   806  000C7A  C00D  F00A         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
   807  000C7E  EC42  F006         	call	_LCD_String	;wreg free
   808  000C82  0012               	return		;funcret
   809  000C84                     __end_of_LCD_String_xy:
   810                           	callstack 0
   811                           
   812 ;; *************** function _LCD_String *****************
   813 ;; Defined at:
   814 ;;		line 46 in file "LCD_16x2_4bit_mode.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  msg             2    8[COMRAM] PTR const unsigned char 
   817 ;;		 -> STR_1(6), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   829 ;;      Params:         2       0       0       0       0       0       0       0       0
   830 ;;      Locals:         0       0       0       0       0       0       0       0       0
   831 ;;      Temps:          0       0       0       0       0       0       0       0       0
   832 ;;      Totals:         2       0       0       0       0       0       0       0       0
   833 ;;Total ram usage:        2 bytes
   834 ;; Hardware stack levels used: 1
   835 ;; Hardware stack levels required when called: 2
   836 ;; This function calls:
   837 ;;		_LCD_Char
   838 ;; This function is called by:
   839 ;;		_LCD_String_xy
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text3
   844  000C84                     __ptext3:
   845                           	callstack 0
   846  000C84                     _LCD_String:
   847                           	callstack 27
   848  000C84                     
   849                           ;LCD_16x2_4bit_mode.c: 46: void LCD_String(const char *msg);LCD_16x2_4bit_mode.c: 47: {;
      +                          LCD_16x2_4bit_mode.c: 48:  while((*msg)!=0)
   850  000C84  EF4E  F006         	goto	l1126
   851  000C88                     l1122:
   852                           
   853                           ;LCD_16x2_4bit_mode.c: 49:  {;LCD_16x2_4bit_mode.c: 50:    LCD_Char(*msg);
   854  000C88  C009  FFF6         	movff	LCD_String@msg,tblptrl
   855  000C8C  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
   856  000C90                     	if	0	;tblptru may be non-zero
   857  000C90                     	endif
   858  000C90                     	if	0	;tblptru may be non-zero
   859  000C90                     	endif
   860  000C90  0008               	tblrd		*
   861  000C92  50F5               	movf	tablat,w,c
   862  000C94  ECB1  F005         	call	_LCD_Char
   863  000C98                     
   864                           ;LCD_16x2_4bit_mode.c: 51:    msg++;
   865  000C98  4A09               	infsnz	LCD_String@msg^0,f,c
   866  000C9A  2A0A               	incf	(LCD_String@msg+1)^0,f,c
   867  000C9C                     l1126:
   868                           
   869                           ;LCD_16x2_4bit_mode.c: 48:  while((*msg)!=0)
   870  000C9C  C009  FFF6         	movff	LCD_String@msg,tblptrl
   871  000CA0  C00A  FFF7         	movff	LCD_String@msg+1,tblptrh
   872  000CA4                     	if	0	;tblptru may be non-zero
   873  000CA4                     	endif
   874  000CA4                     	if	0	;tblptru may be non-zero
   875  000CA4                     	endif
   876  000CA4  0008               	tblrd		*
   877  000CA6  50F5               	movf	tablat,w,c
   878  000CA8  0900               	iorlw	0
   879  000CAA  A4D8               	btfss	status,2,c
   880  000CAC  EF5A  F006         	goto	u271
   881  000CB0  EF5C  F006         	goto	u270
   882  000CB4                     u271:
   883  000CB4  EF44  F006         	goto	l1122
   884  000CB8                     u270:
   885  000CB8  0012               	return		;funcret
   886  000CBA                     __end_of_LCD_String:
   887                           	callstack 0
   888                           
   889 ;; *************** function _LCD_Char *****************
   890 ;; Defined at:
   891 ;;		line 31 in file "LCD_16x2_4bit_mode.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  dat             1    wreg     unsigned char 
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  dat             1    7[COMRAM] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;                  1    wreg      void 
   898 ;; Registers used:
   899 ;;		wreg, status,2, status,0, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 0/0
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   905 ;;      Params:         0       0       0       0       0       0       0       0       0
   906 ;;      Locals:         1       0       0       0       0       0       0       0       0
   907 ;;      Temps:          1       0       0       0       0       0       0       0       0
   908 ;;      Totals:         2       0       0       0       0       0       0       0       0
   909 ;;Total ram usage:        2 bytes
   910 ;; Hardware stack levels used: 1
   911 ;; Hardware stack levels required when called: 1
   912 ;; This function calls:
   913 ;;		_MSdelay
   914 ;; This function is called by:
   915 ;;		_LCD_String
   916 ;;		_main
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	text4
   921  000B62                     __ptext4:
   922                           	callstack 0
   923  000B62                     _LCD_Char:
   924                           	callstack 27
   925                           
   926                           ;incstack = 0
   927                           ;LCD_Char@dat stored from wreg
   928  000B62  6E08               	movwf	LCD_Char@dat^0,c
   929  000B64                     
   930                           ;LCD_16x2_4bit_mode.c: 31: void LCD_Char(unsigned char dat);LCD_16x2_4bit_mode.c: 32: {;
      +                          LCD_16x2_4bit_mode.c: 33:  LATD = (LATD & 0x0f) | (0xF0 & dat);
   931  000B64  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
   932  000B68  0EF0               	movlw	240
   933  000B6A  1607               	andwf	??_LCD_Char^0,f,c
   934  000B6C  508C               	movf	140,w,c	;volatile
   935  000B6E  0B0F               	andlw	15
   936  000B70  1007               	iorwf	??_LCD_Char^0,w,c
   937  000B72  6E8C               	movwf	140,c	;volatile
   938  000B74                     
   939                           ;LCD_16x2_4bit_mode.c: 34:  LATD0 = 1;
   940  000B74  808C               	bsf	3980,0,c	;volatile
   941  000B76                     
   942                           ;LCD_16x2_4bit_mode.c: 35:  LATD1 = 1;
   943  000B76  828C               	bsf	3980,1,c	;volatile
   944  000B78                     
   945                           ;LCD_16x2_4bit_mode.c: 36:  __nop();
   946  000B78  F000               	nop	
   947  000B7A                     
   948                           ;LCD_16x2_4bit_mode.c: 37:  LATD1 = 0;
   949  000B7A  928C               	bcf	3980,1,c	;volatile
   950  000B7C                     
   951                           ;LCD_16x2_4bit_mode.c: 38:  MSdelay(1);
   952  000B7C  0E00               	movlw	0
   953  000B7E  6E02               	movwf	(MSdelay@val+1)^0,c
   954  000B80  0E01               	movlw	1
   955  000B82  6E01               	movwf	MSdelay@val^0,c
   956  000B84  ECFD  F005         	call	_MSdelay	;wreg free
   957  000B88                     
   958                           ;LCD_16x2_4bit_mode.c: 39:     LATD = (LATD & 0x0f) | (dat<<4);
   959  000B88  C008  F007         	movff	LCD_Char@dat,??_LCD_Char
   960  000B8C  3A07               	swapf	??_LCD_Char^0,f,c
   961  000B8E  0EF0               	movlw	240
   962  000B90  1607               	andwf	??_LCD_Char^0,f,c
   963  000B92  508C               	movf	140,w,c	;volatile
   964  000B94  0B0F               	andlw	15
   965  000B96  1007               	iorwf	??_LCD_Char^0,w,c
   966  000B98  6E8C               	movwf	140,c	;volatile
   967  000B9A                     
   968                           ;LCD_16x2_4bit_mode.c: 40:  LATD1 = 1;
   969  000B9A  828C               	bsf	3980,1,c	;volatile
   970  000B9C                     
   971                           ;LCD_16x2_4bit_mode.c: 41:  __nop();
   972  000B9C  F000               	nop	
   973  000B9E                     
   974                           ;LCD_16x2_4bit_mode.c: 42:  LATD1 = 0;
   975  000B9E  928C               	bcf	3980,1,c	;volatile
   976                           
   977                           ;LCD_16x2_4bit_mode.c: 43:  MSdelay(3);
   978  000BA0  0E00               	movlw	0
   979  000BA2  6E02               	movwf	(MSdelay@val+1)^0,c
   980  000BA4  0E03               	movlw	3
   981  000BA6  6E01               	movwf	MSdelay@val^0,c
   982  000BA8  ECFD  F005         	call	_MSdelay	;wreg free
   983  000BAC  0012               	return		;funcret
   984  000BAE                     __end_of_LCD_Char:
   985                           	callstack 0
   986                           
   987 ;; *************** function _LCD_Init *****************
   988 ;; Defined at:
   989 ;;		line 3 in file "LCD_16x2_4bit_mode.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;		None
   992 ;; Auto vars:     Size  Location     Type
   993 ;;		None
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1003 ;;      Params:         0       0       0       0       0       0       0       0       0
  1004 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1006 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1007 ;;Total ram usage:        0 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; Hardware stack levels required when called: 2
  1010 ;; This function calls:
  1011 ;;		_LCD_Command
  1012 ;;		_MSdelay
  1013 ;; This function is called by:
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text5
  1019  000CEE                     __ptext5:
  1020                           	callstack 0
  1021  000CEE                     _LCD_Init:
  1022                           	callstack 28
  1023  000CEE                     
  1024                           ;LCD_16x2_4bit_mode.c: 5:     TRISD = 0;
  1025  000CEE  0E00               	movlw	0
  1026  000CF0  6E95               	movwf	149,c	;volatile
  1027  000CF2                     
  1028                           ;LCD_16x2_4bit_mode.c: 6:     MSdelay(15);
  1029  000CF2  0E00               	movlw	0
  1030  000CF4  6E02               	movwf	(MSdelay@val+1)^0,c
  1031  000CF6  0E0F               	movlw	15
  1032  000CF8  6E01               	movwf	MSdelay@val^0,c
  1033  000CFA  ECFD  F005         	call	_MSdelay	;wreg free
  1034  000CFE                     
  1035                           ;LCD_16x2_4bit_mode.c: 7:     LCD_Command(0x02);
  1036  000CFE  0E02               	movlw	2
  1037  000D00  ECD7  F005         	call	_LCD_Command
  1038  000D04                     
  1039                           ;LCD_16x2_4bit_mode.c: 9:     LCD_Command(0x28);
  1040  000D04  0E28               	movlw	40
  1041  000D06  ECD7  F005         	call	_LCD_Command
  1042  000D0A                     
  1043                           ;LCD_16x2_4bit_mode.c: 11:  LCD_Command(0x01);
  1044  000D0A  0E01               	movlw	1
  1045  000D0C  ECD7  F005         	call	_LCD_Command
  1046  000D10                     
  1047                           ;LCD_16x2_4bit_mode.c: 12:     LCD_Command(0x0c);
  1048  000D10  0E0C               	movlw	12
  1049  000D12  ECD7  F005         	call	_LCD_Command
  1050  000D16                     
  1051                           ;LCD_16x2_4bit_mode.c: 13:  LCD_Command(0x06);
  1052  000D16  0E06               	movlw	6
  1053  000D18  ECD7  F005         	call	_LCD_Command
  1054  000D1C  0012               	return		;funcret
  1055  000D1E                     __end_of_LCD_Init:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _LCD_Clear *****************
  1059 ;; Defined at:
  1060 ;;		line 75 in file "LCD_16x2_4bit_mode.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;		None
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;		None
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg, status,2, status,0, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1074 ;;      Params:         0       0       0       0       0       0       0       0       0
  1075 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1077 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1078 ;;Total ram usage:        0 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; Hardware stack levels required when called: 2
  1081 ;; This function calls:
  1082 ;;		_LCD_Command
  1083 ;; This function is called by:
  1084 ;;		_main
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088                           	psect	text6
  1089  000D2E                     __ptext6:
  1090                           	callstack 0
  1091  000D2E                     _LCD_Clear:
  1092                           	callstack 28
  1093  000D2E                     
  1094                           ;LCD_16x2_4bit_mode.c: 77:     LCD_Command(0x01);
  1095  000D2E  0E01               	movlw	1
  1096  000D30  ECD7  F005         	call	_LCD_Command
  1097  000D34  0012               	return		;funcret
  1098  000D36                     __end_of_LCD_Clear:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _LCD_Command *****************
  1102 ;; Defined at:
  1103 ;;		line 16 in file "LCD_16x2_4bit_mode.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  cmd             1    wreg     unsigned char 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  cmd             1    7[COMRAM] unsigned char 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1119 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1120 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        2 bytes
  1122 ;; Hardware stack levels used: 1
  1123 ;; Hardware stack levels required when called: 1
  1124 ;; This function calls:
  1125 ;;		_MSdelay
  1126 ;; This function is called by:
  1127 ;;		_LCD_Init
  1128 ;;		_LCD_String_xy
  1129 ;;		_LCD_Clear
  1130 ;;		_main
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text7
  1135  000BAE                     __ptext7:
  1136                           	callstack 0
  1137  000BAE                     _LCD_Command:
  1138                           	callstack 28
  1139                           
  1140                           ;incstack = 0
  1141                           ;LCD_Command@cmd stored from wreg
  1142  000BAE  6E08               	movwf	LCD_Command@cmd^0,c
  1143  000BB0                     
  1144                           ;LCD_16x2_4bit_mode.c: 16: void LCD_Command(unsigned char cmd );LCD_16x2_4bit_mode.c: 17
      +                          : {;LCD_16x2_4bit_mode.c: 18:  LATD = (LATD & 0x0f) |(0xF0 & cmd);
  1145  000BB0  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  1146  000BB4  0EF0               	movlw	240
  1147  000BB6  1607               	andwf	??_LCD_Command^0,f,c
  1148  000BB8  508C               	movf	140,w,c	;volatile
  1149  000BBA  0B0F               	andlw	15
  1150  000BBC  1007               	iorwf	??_LCD_Command^0,w,c
  1151  000BBE  6E8C               	movwf	140,c	;volatile
  1152  000BC0                     
  1153                           ;LCD_16x2_4bit_mode.c: 19:  LATD0 = 0;
  1154  000BC0  908C               	bcf	3980,0,c	;volatile
  1155  000BC2                     
  1156                           ;LCD_16x2_4bit_mode.c: 20:  LATD1 = 1;
  1157  000BC2  828C               	bsf	3980,1,c	;volatile
  1158  000BC4                     
  1159                           ;LCD_16x2_4bit_mode.c: 21:  __nop();
  1160  000BC4  F000               	nop	
  1161  000BC6                     
  1162                           ;LCD_16x2_4bit_mode.c: 22:  LATD1 = 0;
  1163  000BC6  928C               	bcf	3980,1,c	;volatile
  1164  000BC8                     
  1165                           ;LCD_16x2_4bit_mode.c: 23:  MSdelay(1);
  1166  000BC8  0E00               	movlw	0
  1167  000BCA  6E02               	movwf	(MSdelay@val+1)^0,c
  1168  000BCC  0E01               	movlw	1
  1169  000BCE  6E01               	movwf	MSdelay@val^0,c
  1170  000BD0  ECFD  F005         	call	_MSdelay	;wreg free
  1171  000BD4                     
  1172                           ;LCD_16x2_4bit_mode.c: 24:     LATD = (LATD & 0x0f) | (cmd<<4);
  1173  000BD4  C008  F007         	movff	LCD_Command@cmd,??_LCD_Command
  1174  000BD8  3A07               	swapf	??_LCD_Command^0,f,c
  1175  000BDA  0EF0               	movlw	240
  1176  000BDC  1607               	andwf	??_LCD_Command^0,f,c
  1177  000BDE  508C               	movf	140,w,c	;volatile
  1178  000BE0  0B0F               	andlw	15
  1179  000BE2  1007               	iorwf	??_LCD_Command^0,w,c
  1180  000BE4  6E8C               	movwf	140,c	;volatile
  1181  000BE6                     
  1182                           ;LCD_16x2_4bit_mode.c: 25:  LATD1 = 1;
  1183  000BE6  828C               	bsf	3980,1,c	;volatile
  1184  000BE8                     
  1185                           ;LCD_16x2_4bit_mode.c: 26:  __nop();
  1186  000BE8  F000               	nop	
  1187  000BEA                     
  1188                           ;LCD_16x2_4bit_mode.c: 27:  LATD1 = 0;
  1189  000BEA  928C               	bcf	3980,1,c	;volatile
  1190                           
  1191                           ;LCD_16x2_4bit_mode.c: 28:  MSdelay(3);
  1192  000BEC  0E00               	movlw	0
  1193  000BEE  6E02               	movwf	(MSdelay@val+1)^0,c
  1194  000BF0  0E03               	movlw	3
  1195  000BF2  6E01               	movwf	MSdelay@val^0,c
  1196  000BF4  ECFD  F005         	call	_MSdelay	;wreg free
  1197  000BF8  0012               	return		;funcret
  1198  000BFA                     __end_of_LCD_Command:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _MSdelay *****************
  1202 ;; Defined at:
  1203 ;;		line 80 in file "LCD_16x2_4bit_mode.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  val             2    0[COMRAM] unsigned int 
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;  j               2    4[COMRAM] unsigned int 
  1208 ;;  i               2    2[COMRAM] unsigned int 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, status,2, status,0
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1218 ;;      Params:         2       0       0       0       0       0       0       0       0
  1219 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1221 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1222 ;;Total ram usage:        6 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_LCD_Init
  1228 ;;		_LCD_Command
  1229 ;;		_LCD_Char
  1230 ;;		_keyfind
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text8
  1235  000BFA                     __ptext8:
  1236                           	callstack 0
  1237  000BFA                     _MSdelay:
  1238                           	callstack 29
  1239  000BFA                     
  1240                           ;LCD_16x2_4bit_mode.c: 80: void MSdelay(unsigned int val);LCD_16x2_4bit_mode.c: 81: {;LC
      +                          D_16x2_4bit_mode.c: 82:  unsigned int i,j;;LCD_16x2_4bit_mode.c: 83:  for(i=0;i<val;i++)
  1241  000BFA  0E00               	movlw	0
  1242  000BFC  6E04               	movwf	(MSdelay@i+1)^0,c
  1243  000BFE  0E00               	movlw	0
  1244  000C00  6E03               	movwf	MSdelay@i^0,c
  1245  000C02  EF16  F006         	goto	l1078
  1246  000C06                     l1066:
  1247                           
  1248                           ;LCD_16x2_4bit_mode.c: 84:      for(j=0;j<165;j++);
  1249  000C06  0E00               	movlw	0
  1250  000C08  6E06               	movwf	(MSdelay@j+1)^0,c
  1251  000C0A  0E00               	movlw	0
  1252  000C0C  6E05               	movwf	MSdelay@j^0,c
  1253  000C0E                     l1072:
  1254  000C0E  4A05               	infsnz	MSdelay@j^0,f,c
  1255  000C10  2A06               	incf	(MSdelay@j+1)^0,f,c
  1256  000C12  5006               	movf	(MSdelay@j+1)^0,w,c
  1257  000C14  E109               	bnz	u250
  1258  000C16  0EA5               	movlw	165
  1259  000C18  5C05               	subwf	MSdelay@j^0,w,c
  1260  000C1A  A0D8               	btfss	status,0,c
  1261  000C1C  EF12  F006         	goto	u251
  1262  000C20  EF14  F006         	goto	u250
  1263  000C24                     u251:
  1264  000C24  EF07  F006         	goto	l1072
  1265  000C28                     u250:
  1266  000C28  4A03               	infsnz	MSdelay@i^0,f,c
  1267  000C2A  2A04               	incf	(MSdelay@i+1)^0,f,c
  1268  000C2C                     l1078:
  1269  000C2C  5001               	movf	MSdelay@val^0,w,c
  1270  000C2E  5C03               	subwf	MSdelay@i^0,w,c
  1271  000C30  5002               	movf	(MSdelay@val+1)^0,w,c
  1272  000C32  5804               	subwfb	(MSdelay@i+1)^0,w,c
  1273  000C34  A0D8               	btfss	status,0,c
  1274  000C36  EF1F  F006         	goto	u261
  1275  000C3A  EF21  F006         	goto	u260
  1276  000C3E                     u261:
  1277  000C3E  EF03  F006         	goto	l1066
  1278  000C42                     u260:
  1279  000C42  0012               	return		;funcret
  1280  000C44                     __end_of_MSdelay:
  1281                           	callstack 0
  1282                           
  1283                           	psect	rparam
  1284  0000                     
  1285                           	psect	idloc
  1286                           
  1287                           ;Config register IDLOC0 @ 0x200000
  1288                           ;	unspecified, using default values
  1289  200000                     	org	2097152
  1290  200000  FF                 	db	255
  1291                           
  1292                           ;Config register IDLOC1 @ 0x200001
  1293                           ;	unspecified, using default values
  1294  200001                     	org	2097153
  1295  200001  FF                 	db	255
  1296                           
  1297                           ;Config register IDLOC2 @ 0x200002
  1298                           ;	unspecified, using default values
  1299  200002                     	org	2097154
  1300  200002  FF                 	db	255
  1301                           
  1302                           ;Config register IDLOC3 @ 0x200003
  1303                           ;	unspecified, using default values
  1304  200003                     	org	2097155
  1305  200003  FF                 	db	255
  1306                           
  1307                           ;Config register IDLOC4 @ 0x200004
  1308                           ;	unspecified, using default values
  1309  200004                     	org	2097156
  1310  200004  FF                 	db	255
  1311                           
  1312                           ;Config register IDLOC5 @ 0x200005
  1313                           ;	unspecified, using default values
  1314  200005                     	org	2097157
  1315  200005  FF                 	db	255
  1316                           
  1317                           ;Config register IDLOC6 @ 0x200006
  1318                           ;	unspecified, using default values
  1319  200006                     	org	2097158
  1320  200006  FF                 	db	255
  1321                           
  1322                           ;Config register IDLOC7 @ 0x200007
  1323                           ;	unspecified, using default values
  1324  200007                     	org	2097159
  1325  200007  FF                 	db	255
  1326                           
  1327                           	psect	config
  1328                           
  1329                           ;Config register CONFIG1L @ 0x300000
  1330                           ;	PLL Prescaler Selection bits
  1331                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1332                           ;	System Clock Postscaler Selection bits
  1333                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1334                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1335                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1336  300000                     	org	3145728
  1337  300000  00                 	db	0
  1338                           
  1339                           ;Config register CONFIG1H @ 0x300001
  1340                           ;	Oscillator Selection bits
  1341                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1342                           ;	Fail-Safe Clock Monitor Enable bit
  1343                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1344                           ;	Internal/External Oscillator Switchover bit
  1345                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1346  300001                     	org	3145729
  1347  300001  09                 	db	9
  1348                           
  1349                           ;Config register CONFIG2L @ 0x300002
  1350                           ;	Power-up Timer Enable bit
  1351                           ;	PWRT = OFF, PWRT disabled
  1352                           ;	Brown-out Reset Enable bits
  1353                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1354                           ;	Brown-out Reset Voltage bits
  1355                           ;	BORV = 3, Minimum setting 2.05V
  1356                           ;	USB Voltage Regulator Enable bit
  1357                           ;	VREGEN = OFF, USB voltage regulator disabled
  1358  300002                     	org	3145730
  1359  300002  1F                 	db	31
  1360                           
  1361                           ;Config register CONFIG2H @ 0x300003
  1362                           ;	Watchdog Timer Enable bit
  1363                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1364                           ;	Watchdog Timer Postscale Select bits
  1365                           ;	WDTPS = 32768, 1:32768
  1366  300003                     	org	3145731
  1367  300003  1E                 	db	30
  1368                           
  1369                           ; Padding undefined space
  1370  300004                     	org	3145732
  1371  300004  FF                 	db	255
  1372                           
  1373                           ;Config register CONFIG3H @ 0x300005
  1374                           ;	CCP2 MUX bit
  1375                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1376                           ;	PORTB A/D Enable bit
  1377                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1378                           ;	Low-Power Timer 1 Oscillator Enable bit
  1379                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1380                           ;	MCLR Pin Enable bit
  1381                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1382  300005                     	org	3145733
  1383  300005  01                 	db	1
  1384                           
  1385                           ;Config register CONFIG4L @ 0x300006
  1386                           ;	Stack Full/Underflow Reset Enable bit
  1387                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1388                           ;	Single-Supply ICSP Enable bit
  1389                           ;	LVP = OFF, Single-Supply ICSP disabled
  1390                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1391                           ;	ICPRT = OFF, ICPORT disabled
  1392                           ;	Extended Instruction Set Enable bit
  1393                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1394                           ;	Background Debugger Enable bit
  1395                           ;	DEBUG = 0x1, unprogrammed default
  1396  300006                     	org	3145734
  1397  300006  81                 	db	129
  1398                           
  1399                           ; Padding undefined space
  1400  300007                     	org	3145735
  1401  300007  FF                 	db	255
  1402                           
  1403                           ;Config register CONFIG5L @ 0x300008
  1404                           ;	Code Protection bit
  1405                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1406                           ;	Code Protection bit
  1407                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1408                           ;	Code Protection bit
  1409                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1410                           ;	Code Protection bit
  1411                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1412  300008                     	org	3145736
  1413  300008  0F                 	db	15
  1414                           
  1415                           ;Config register CONFIG5H @ 0x300009
  1416                           ;	Boot Block Code Protection bit
  1417                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1418                           ;	Data EEPROM Code Protection bit
  1419                           ;	CPD = OFF, Data EEPROM is not code-protected
  1420  300009                     	org	3145737
  1421  300009  C0                 	db	192
  1422                           
  1423                           ;Config register CONFIG6L @ 0x30000A
  1424                           ;	Write Protection bit
  1425                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1426                           ;	Write Protection bit
  1427                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1428                           ;	Write Protection bit
  1429                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1430                           ;	Write Protection bit
  1431                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1432  30000A                     	org	3145738
  1433  30000A  0F                 	db	15
  1434                           
  1435                           ;Config register CONFIG6H @ 0x30000B
  1436                           ;	Configuration Register Write Protection bit
  1437                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1438                           ;	Boot Block Write Protection bit
  1439                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1440                           ;	Data EEPROM Write Protection bit
  1441                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1442  30000B                     	org	3145739
  1443  30000B  E0                 	db	224
  1444                           
  1445                           ;Config register CONFIG7L @ 0x30000C
  1446                           ;	Table Read Protection bit
  1447                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1448                           ;	Table Read Protection bit
  1449                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1450                           ;	Table Read Protection bit
  1451                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1452                           ;	Table Read Protection bit
  1453                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1454  30000C                     	org	3145740
  1455  30000C  0F                 	db	15
  1456                           
  1457                           ;Config register CONFIG7H @ 0x30000D
  1458                           ;	Boot Block Table Read Protection bit
  1459                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1460  30000D                     	org	3145741
  1461  30000D  40                 	db	64
  1462                           tosu	equ	0xFFF
  1463                           tosh	equ	0xFFE
  1464                           tosl	equ	0xFFD
  1465                           stkptr	equ	0xFFC
  1466                           pclatu	equ	0xFFB
  1467                           pclath	equ	0xFFA
  1468                           pcl	equ	0xFF9
  1469                           tblptru	equ	0xFF8
  1470                           tblptrh	equ	0xFF7
  1471                           tblptrl	equ	0xFF6
  1472                           tablat	equ	0xFF5
  1473                           prodh	equ	0xFF4
  1474                           prodl	equ	0xFF3
  1475                           indf0	equ	0xFEF
  1476                           postinc0	equ	0xFEE
  1477                           postdec0	equ	0xFED
  1478                           preinc0	equ	0xFEC
  1479                           plusw0	equ	0xFEB
  1480                           fsr0h	equ	0xFEA
  1481                           fsr0l	equ	0xFE9
  1482                           wreg	equ	0xFE8
  1483                           indf1	equ	0xFE7
  1484                           postinc1	equ	0xFE6
  1485                           postdec1	equ	0xFE5
  1486                           preinc1	equ	0xFE4
  1487                           plusw1	equ	0xFE3
  1488                           fsr1h	equ	0xFE2
  1489                           fsr1l	equ	0xFE1
  1490                           bsr	equ	0xFE0
  1491                           indf2	equ	0xFDF
  1492                           postinc2	equ	0xFDE
  1493                           postdec2	equ	0xFDD
  1494                           preinc2	equ	0xFDC
  1495                           plusw2	equ	0xFDB
  1496                           fsr2h	equ	0xFDA
  1497                           fsr2l	equ	0xFD9
  1498                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    0
    Data        16
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      67
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _keyfind->_MSdelay
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0    6685
                                             15 COMRAM    33    33      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                            _keyfind
 ---------------------------------------------------------------------------------
 (1) _keyfind                                              1     1      0     700
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3    1896
                                             10 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     865
                                              8 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0     744
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0    1444
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     744
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0     744
                                              6 COMRAM     2     2      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _MSdelay                                              6     4      2     700
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
     _MSdelay
   _LCD_Clear
     _LCD_Command
       _MSdelay
   _LCD_Command
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _keyfind
     _MSdelay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      43       1       70.5%
BITBIGSFRhl         3D      0       0      22        0.0%
BITBIGSFRllll       21      0       0      27        0.0%
BITBIGSFRhhl        1D      0       0      21        0.0%
BITBIGSFRhhh         E      0       0      20        0.0%
BITBIGSFRlllh        8      0       0      26        0.0%
BITBIGSFRlhl         6      0       0      24        0.0%
BITBIGSFRllh         1      0       0      25        0.0%
BITBIGSFRlhh         1      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      43      28        0.0%
DATA                 0      0      43       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Mar 09 15:07:15 2022

           ?_LCD_Command 0001                       l20 0BF8                       l23 0BAC  
                     l17 0D1C                       l34 0C82                       l45 0C42  
                     l37 0D34                       l29 0CB8                       l83 0A6E  
            ?_LCD_String 0009                      l121 098C                      l113 0904  
                    l108 08C0                      l117 0948                      l127 0A28  
                    u300 0840                      u301 083C                      u310 0868  
                    u311 0864                      u400 099E                      u320 0880  
                    u401 099A                      u321 087C                      u250 0C28  
                    u410 09B0                      u330 08B2                      u251 0C24  
                    u411 09AC                      u331 08AE                      u260 0C42  
                    u420 09D8                      u340 08D2                      u261 0C3E  
                    u421 09D4                      u341 08CE                      u270 0CB8  
                    u430 0A00                      u350 08F6                      u271 0CB4  
                    u431 09FC                      u351 08F2                      u280 0C56  
                    u360 0916                      u440 0A6E                      u281 0C52  
                    u361 0912                      u441 0A6A                      u370 093A  
                    u290 0828                      u450 0A8C                      u371 0936  
                    u291 0824                      u451 0A88                      u380 095A  
                    u460 0AC8                      u381 0956                      u461 0AC4  
                    u390 097E                      u470 0AE6                      u391 097A  
                    u471 0AE2                      u480 0B3C                      u481 0B38  
                    prod 000FF3              LCD_Char@dat 0008                     l1100 0BB0  
                   l1110 0BC8                     l1102 0BC0                     l1112 0BD4  
                   l1104 0BC2                     l1120 0C84                     l1200 08F6  
                   l1114 0BE6                     l1106 0BC4                     l1130 0CF2  
                   l1122 0C88                     l1210 0928                     l1202 08FE  
                   l1116 0BE8                     l1108 0BC6                     l1140 0D16  
                   l1132 0CFE                     l1124 0C98                     l1220 0968  
                   l1212 093A                     l1204 091A                     l1300 0B02  
                   l1118 0BEA                     l1134 0D04                     l1126 0C9C  
                   l1150 0C68                     l1142 0C46                     l1230 09B0  
                   l1222 096C                     l1214 0942                     l1206 091E  
                   l1310 0B20                     l1072 0C0E                     l1064 0BFA  
                   l1136 0D0A                     l1128 0CEE                     l1080 0B64  
                   l1152 0C70                     l1144 0C46                     l1224 097E  
                   l1216 095E                     l1208 0924                     l1160 0810  
                   l1312 0B40                     l1074 0C12                     l1066 0C06  
                   l1138 0D10                     l1090 0B7C                     l1082 0B74  
                   l1154 0C76                     l1146 0C56                     l1226 0986  
                   l1218 0962                     l1170 0850                     l1162 0816  
                   l1314 0B50                     l1306 0B0A                     l1076 0C28  
                   l1156 0D2E                     l1092 0B88                     l1084 0B76  
                   l1148 0C5E                     l1252 0A16                     l1244 09EE  
                   l1236 09C6                     l1228 099E                     l1180 0892  
                   l1172 0856                     l1164 0828                     l1316 0B54  
                   l1308 0B1C                     l1078 0C2C                     l1094 0B9A  
                   l1086 0B78                     l1246 0A00                     l1238 09D8  
                   l1190 08BA                     l1182 0896                     l1174 0868  
                   l1166 0840                     l1158 0808                     l1270 0A70  
                   l1096 0B9C                     l1088 0B7A                     l1192 08D6  
                   l1184 089C                     l1176 0880                     l1168 084C  
                   l1272 0A74                     l1264 0A3E                     l1098 0B9E  
                   l1194 08DA                     l1186 08A0                     l1178 088C  
                   l1290 0AC8                     l1274 0A7A                     l1266 0A4E  
                   l1258 0A2A                     l1196 08E0                     l1188 08B2  
                   l1284 0A98                     l1276 0A8C                     l1292 0AD4  
                   l1268 0A52                     l1198 08E4                     l1294 0AE6  
                   l1286 0AA8                     l1278 0A90                     l1296 0AEA  
                   l1288 0AAC                     l1298 0AFC                     STR_1 0801  
                   _LATB 000F8A                     _LATD 000F8C                     _RBPU 007F8F  
                   _main 0A2A                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     prodl 000FF3                     start 0000  
        __end_of_MSdelay 0C44            _LCD_String_xy 0C44             ___param_bank 000000  
       __end_of_LCD_Char 0BAE         __end_of_LCD_Init 0D1E                    ?_main 0001  
                  _LATD0 007C60                    _LATD1 007C61                    _PORTB 000F81  
                  _TRISB 000F93                    _TRISD 000F95          __end_of_keyfind 0A2A  
                  main@i 002F                    tablat 000FF5                    status 000FD8  
         ?_LCD_String_xy 000B          __initialization 0CBA             __end_of_main 0B62  
                 ??_main 0010        __end_of_LCD_Clear 0D36            __activetblptr 000001  
       LCD_String_xy@msg 000C         LCD_String_xy@pos 000B         LCD_String_xy@row 000E  
              ??_MSdelay 0003                   _OSCCON 000FD3                   _keypad 0031  
                 isa$std 000001                   _rowloc 0042             __pdataCOMRAM 0031  
              ??_keyfind 0007             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ?_LCD_Char 0001  
             __accesstop 0060  __end_of__initialization 0CE0                ?_LCD_Init 0001  
        ??_LCD_String_xy 000E            ___rparam_used 000001           __pcstackCOMRAM 0001  
           ??_LCD_String 000B               ??_LCD_Char 0007               ??_LCD_Init 0009  
     __end_of_LCD_String 0CBA                  _MSdelay 0BFA            LCD_String@msg 0009  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0800  
                __pcinit 0CBA                  __ramtop 0800                  __ptext0 0A2A  
                __ptext1 0808                  __ptext2 0C44                  __ptext3 0C84  
                __ptext4 0B62                  __ptext5 0CEE                  __ptext6 0D2E  
                __ptext7 0BAE                  __ptext8 0BFA                  _col_loc 0043  
                _keyfind 0808                _LCD_Clear 0D2E                  main@key 002E  
   end_of_initialization 0CE0           LCD_Command@cmd 0008                  postdec1 000FE5  
                postinc0 000FEE               ?_LCD_Clear 0001            ??_LCD_Command 0007  
          __pidataCOMRAM 0D1E      start_initialization 0CBA    __end_of_LCD_String_xy 0C84  
    __end_of_LCD_Command 0BFA              __pbssCOMRAM 0041              ??_LCD_Clear 0009  
               ?_MSdelay 0001              __smallconst 0800                 ?_keyfind 0001  
  LCD_String_xy@location 000F                 MSdelay@i 0003                 MSdelay@j 0005  
               _LCD_Char 0B62                 _LCD_Init 0CEE              _LCD_Command 0BAE  
              copy_data0 0CCE                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800               MSdelay@val 0001                 _temp_col 0041  
               isa$xinst 000000                 main@mess 0010               _LCD_String 0C84  
